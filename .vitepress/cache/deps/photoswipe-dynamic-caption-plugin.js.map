{
  "version": 3,
  "sources": ["../../../node_modules/photoswipe-dynamic-caption-plugin/photoswipe-dynamic-caption-plugin.esm.js"],
  "sourcesContent": ["/**\r\n * PhotoSwipe Dynamic Caption plugin v1.2.7\r\n * https://github.com/dimsemenov/photoswipe-dynamic-caption-plugin\r\n * \r\n * By https://dimsemenov.com\r\n */\r\n\r\nconst defaultOptions = {\r\n  captionContent: '.pswp-caption-content',\r\n  type: 'auto',\r\n  horizontalEdgeThreshold: 20,\r\n  mobileCaptionOverlapRatio: 0.3,\r\n  mobileLayoutBreakpoint: 600,\r\n  verticallyCenterImage: false\r\n};\r\n\r\nclass PhotoSwipeDynamicCaption {\r\n  constructor(lightbox, options) {\r\n    this.options = {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n\r\n    this.lightbox = lightbox;\r\n\r\n    this.lightbox.on('init', () => {\r\n      this.pswp = this.lightbox.pswp;\r\n      this.initCaption();\r\n    });\r\n  }\r\n\r\n  initCaption() {\r\n    const { pswp } = this;\r\n\r\n    pswp.on('change', () => {\r\n      // make sure caption is displayed after slides are switched\r\n      this.showCaption(this.pswp.currSlide);\r\n    });\r\n\r\n    pswp.on('calcSlideSize', (e) => this.onCalcSlideSize(e));\r\n\r\n    pswp.on('slideDestroy', (e) => {\r\n      if (e.slide.dynamicCaption) {\r\n        if (e.slide.dynamicCaption.element) {\r\n          e.slide.dynamicCaption.element.remove();\r\n        }\r\n        delete e.slide.dynamicCaption;\r\n      }\r\n    });\r\n\r\n    // hide caption if zoomed\r\n    pswp.on('zoomPanUpdate', ({ slide }) => {\r\n      if (pswp.opener.isOpen && slide.dynamicCaption) {\r\n        if (slide.currZoomLevel > slide.zoomLevels.initial) {\r\n          this.hideCaption(slide);\r\n        } else {\r\n          this.showCaption(slide);\r\n        }\r\n  \r\n        // move caption on vertical drag\r\n        if (slide.dynamicCaption.element) {\r\n          let captionYOffset = 0;\r\n          if (slide.currZoomLevel <= slide.zoomLevels.initial) {\r\n            const shiftedAmount = slide.pan.y - slide.bounds.center.y;\r\n            if (Math.abs(shiftedAmount) > 1) {\r\n              captionYOffset = shiftedAmount;\r\n            }\r\n          }\r\n\r\n          this.setCaptionYOffset(slide.dynamicCaption.element, captionYOffset);\r\n        }\r\n\r\n        this.adjustPanArea(slide, slide.currZoomLevel);\r\n      }\r\n    });\r\n\r\n    pswp.on('beforeZoomTo', (e) => {\r\n      this.adjustPanArea(pswp.currSlide, e.destZoomLevel);\r\n    });\r\n\r\n    // Stop default action of tap when tapping on the caption\r\n    pswp.on('tapAction', (e) => {\r\n      if (e.originalEvent.target.closest('.pswp__dynamic-caption')) {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  }\r\n\r\n  adjustPanArea(slide, zoomLevel) {\r\n    if (slide.dynamicCaption && slide.dynamicCaption.adjustedPanAreaSize) {\r\n      if (zoomLevel > slide.zoomLevels.initial) {\r\n        slide.panAreaSize.x = slide.dynamicCaption.originalPanAreaSize.x;\r\n        slide.panAreaSize.y = slide.dynamicCaption.originalPanAreaSize.y;\r\n      } else {\r\n        // Restore panAreaSize after we zoom back to initial position\r\n        slide.panAreaSize.x = slide.dynamicCaption.adjustedPanAreaSize.x;\r\n        slide.panAreaSize.y = slide.dynamicCaption.adjustedPanAreaSize.y;\r\n      }\r\n    }\r\n  }\r\n\r\n  useMobileLayout() {\r\n    const { mobileLayoutBreakpoint } = this.options;\r\n\r\n    if (typeof mobileLayoutBreakpoint === 'function') {\r\n      return mobileLayoutBreakpoint.call(this);\r\n    } else if (typeof mobileLayoutBreakpoint === 'number') {\r\n      if (window.innerWidth < mobileLayoutBreakpoint) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  hideCaption(slide) {\r\n    if (slide.dynamicCaption && !slide.dynamicCaption.hidden) {\r\n      const captionElement = slide.dynamicCaption.element;\r\n\r\n      if (!captionElement) {\r\n        return;\r\n      }\r\n\r\n      slide.dynamicCaption.hidden = true;\r\n      captionElement.classList.add('pswp__dynamic-caption--faded');\r\n\r\n      // Disable caption visibility with the delay, so it's not interactable \r\n      if (slide.captionFadeTimeout) {\r\n        clearTimeout(slide.captionFadeTimeout);\r\n      }\r\n      slide.captionFadeTimeout = setTimeout(() => {\r\n        captionElement.style.visibility = 'hidden';\r\n        delete slide.captionFadeTimeout;\r\n      }, 400);\r\n    }\r\n  }\r\n\r\n  setCaptionYOffset(el, y) {\r\n    el.style.transform = `translateY(${y}px)`;\r\n  }\r\n\r\n  showCaption(slide) {\r\n    if (slide.dynamicCaption && slide.dynamicCaption.hidden) {\r\n      const captionElement = slide.dynamicCaption.element;\r\n\r\n      if (!captionElement) {\r\n        return;\r\n      }\r\n\r\n      slide.dynamicCaption.hidden = false;\r\n      captionElement.style.visibility = 'visible';\r\n      \r\n      clearTimeout(slide.captionFadeTimeout);\r\n      slide.captionFadeTimeout = setTimeout(() => {\r\n        captionElement.classList.remove('pswp__dynamic-caption--faded');\r\n        delete slide.captionFadeTimeout;;\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n  setCaptionPosition(captionEl, x, y) {\r\n    const isOnHorizontalEdge = (x <= this.options.horizontalEdgeThreshold);\r\n    captionEl.classList[\r\n      isOnHorizontalEdge ? 'add' : 'remove'\r\n    ]('pswp__dynamic-caption--on-hor-edge');\r\n\r\n    captionEl.style.left = x + 'px';\r\n    captionEl.style.top = y + 'px';\r\n  }\r\n\r\n  setCaptionWidth(captionEl, width) {\r\n    if (!width) {\r\n      captionEl.style.removeProperty('width');\r\n    } else {\r\n      captionEl.style.width = width + 'px';\r\n    }\r\n  }\r\n\r\n  setCaptionType(captionEl, type) {\r\n    const prevType = captionEl.dataset.pswpCaptionType;\r\n    if (type !== prevType) {\r\n      captionEl.classList.add('pswp__dynamic-caption--' + type);\r\n      captionEl.classList.remove('pswp__dynamic-caption--' + prevType);\r\n      captionEl.dataset.pswpCaptionType = type;\r\n    }\r\n  }\r\n\r\n  updateCaptionPosition(slide) {\r\n    if (!slide.dynamicCaption || !slide.dynamicCaption.type || !slide.dynamicCaption.element) {\r\n      return;\r\n    }\r\n\r\n    if (slide.dynamicCaption.type === 'mobile') {\r\n      this.setCaptionType(\r\n        slide.dynamicCaption.element, \r\n        slide.dynamicCaption.type\r\n      );\r\n      \r\n      slide.dynamicCaption.element.style.removeProperty('left');\r\n      slide.dynamicCaption.element.style.removeProperty('top');\r\n      this.setCaptionWidth(slide.dynamicCaption.element, false);\r\n      return;\r\n    }\r\n\r\n    const zoomLevel = slide.zoomLevels.initial;\r\n    const imageWidth = Math.ceil(slide.width * zoomLevel);\r\n    const imageHeight = Math.ceil(slide.height * zoomLevel);\r\n    \r\n    this.setCaptionType(slide.dynamicCaption.element, slide.dynamicCaption.type);\r\n    if (slide.dynamicCaption.type === 'aside') {\r\n      this.setCaptionPosition(\r\n        slide.dynamicCaption.element,\r\n        slide.bounds.center.x + imageWidth,\r\n        slide.bounds.center.y\r\n      );\r\n      this.setCaptionWidth(slide.dynamicCaption.element, false);\r\n    } else if (slide.dynamicCaption.type === 'below') {\r\n      this.setCaptionPosition(\r\n        slide.dynamicCaption.element,\r\n        slide.bounds.center.x,\r\n        slide.bounds.center.y + imageHeight\r\n      );\r\n      this.setCaptionWidth(slide.dynamicCaption.element, imageWidth);\r\n    }\r\n  }\r\n\r\n  onCalcSlideSize(e) {\r\n    const { slide } = e;\r\n    let captionSize;\r\n    let useMobileVersion;\r\n\r\n    if (!slide.dynamicCaption) {\r\n      slide.dynamicCaption = {\r\n        element: undefined,\r\n        type: false,\r\n        hidden: false\r\n      };\r\n\r\n      const captionHTML = this.getCaptionHTML(slide);\r\n\r\n      if (!captionHTML) {\r\n        return;\r\n      }\r\n\r\n      slide.dynamicCaption.element = document.createElement('div');\r\n      slide.dynamicCaption.element.className = 'pswp__dynamic-caption pswp__hide-on-close';\r\n      slide.dynamicCaption.element.innerHTML = captionHTML;\r\n\r\n      this.pswp.dispatch('dynamicCaptionUpdateHTML', { \r\n        captionElement: slide.dynamicCaption.element,\r\n        slide\r\n      });\r\n\r\n      slide.holderElement.appendChild(slide.dynamicCaption.element);\r\n    }\r\n\r\n    if (!slide.dynamicCaption.element) {\r\n      return;\r\n    }\r\n\r\n    this.storeOriginalPanAreaSize(slide);\r\n\r\n    slide.bounds.update(slide.zoomLevels.initial);\r\n    \r\n    if (this.useMobileLayout()) {\r\n      slide.dynamicCaption.type = 'mobile';\r\n      useMobileVersion = true;\r\n    } else {\r\n      if (this.options.type === 'auto') {\r\n        if (slide.bounds.center.x > slide.bounds.center.y) {\r\n          slide.dynamicCaption.type = 'aside';\r\n        } else {\r\n          slide.dynamicCaption.type = 'below';\r\n        }\r\n      } else {\r\n        slide.dynamicCaption.type = this.options.type;\r\n      }\r\n    } \r\n\r\n    const imageWidth = Math.ceil(slide.width * slide.zoomLevels.initial);\r\n    const imageHeight = Math.ceil(slide.height * slide.zoomLevels.initial);\r\n\r\n    this.setCaptionType(\r\n      slide.dynamicCaption.element, \r\n      slide.dynamicCaption.type\r\n    );\r\n\r\n    if (slide.dynamicCaption.type === 'aside') {\r\n      this.setCaptionWidth(slide.dynamicCaption.element, false);\r\n      captionSize = this.measureCaptionSize(slide.dynamicCaption.element, e.slide);\r\n\r\n      const captionWidth = captionSize.x;      \r\n\r\n      const horizontalEnding = imageWidth + slide.bounds.center.x;\r\n      const horizontalLeftover = (slide.panAreaSize.x - horizontalEnding);\r\n\r\n      if (horizontalLeftover <= captionWidth) {\r\n        slide.panAreaSize.x -= captionWidth;\r\n        this.recalculateZoomLevelAndBounds(slide);\r\n      } else {\r\n        // do nothing, caption will fit aside without any adjustments\r\n      }\r\n    } else if (slide.dynamicCaption.type === 'below' || useMobileVersion) {\r\n      this.setCaptionWidth(\r\n        slide.dynamicCaption.element, \r\n        useMobileVersion ? this.pswp.viewportSize.x : imageWidth\r\n      );\r\n\r\n      captionSize = this.measureCaptionSize(slide.dynamicCaption.element, e.slide);\r\n      const captionHeight = captionSize.y;\r\n\r\n      if (this.options.verticallyCenterImage) {\r\n        slide.panAreaSize.y -= captionHeight;\r\n        this.recalculateZoomLevelAndBounds(slide);\r\n      } else {\r\n        // Lift up the image only by caption height\r\n\r\n        // vertical ending of the image\r\n        const verticalEnding = imageHeight + slide.bounds.center.y;\r\n\r\n        // height between bottom of the screen and ending of the image\r\n        // (before any adjustments applied) \r\n        const verticalLeftover = slide.panAreaSize.y - verticalEnding;\r\n        const initialPanAreaHeight = slide.panAreaSize.y;\r\n\r\n        if (verticalLeftover <= captionHeight) {\r\n          // lift up the image to give more space for caption\r\n          slide.panAreaSize.y -= Math.min((captionHeight - verticalLeftover) * 2, captionHeight);\r\n\r\n          // we reduce viewport size, thus we need to update zoom level and pan bounds\r\n          this.recalculateZoomLevelAndBounds(slide);\r\n\r\n          const maxPositionX = slide.panAreaSize.x * this.options.mobileCaptionOverlapRatio / 2;\r\n\r\n          // Do not reduce viewport height if too few space available\r\n          if (useMobileVersion \r\n              && slide.bounds.center.x > maxPositionX) {\r\n            // Restore the default position\r\n            slide.panAreaSize.y = initialPanAreaHeight;\r\n            this.recalculateZoomLevelAndBounds(slide);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // mobile\r\n    }\r\n\r\n    this.storeAdjustedPanAreaSize(slide);\r\n    this.updateCaptionPosition(slide);\r\n  }\r\n\r\n  measureCaptionSize(captionEl, slide) {\r\n    const rect = captionEl.getBoundingClientRect();\r\n    const event = this.pswp.dispatch('dynamicCaptionMeasureSize', {\r\n      captionEl,\r\n      slide,\r\n      captionSize: {\r\n        x: rect.width,\r\n        y: rect.height\r\n      }\r\n    });\r\n    return event.captionSize;\r\n  }\r\n\r\n  recalculateZoomLevelAndBounds(slide) {\r\n    slide.zoomLevels.update(slide.width, slide.height, slide.panAreaSize);\r\n    slide.bounds.update(slide.zoomLevels.initial);\r\n  }\r\n\r\n  storeAdjustedPanAreaSize(slide) {\r\n    if (slide.dynamicCaption) {\r\n      if (!slide.dynamicCaption.adjustedPanAreaSize) {\r\n        slide.dynamicCaption.adjustedPanAreaSize = {};\r\n      }\r\n      slide.dynamicCaption.adjustedPanAreaSize.x = slide.panAreaSize.x;\r\n      slide.dynamicCaption.adjustedPanAreaSize.y = slide.panAreaSize.y;\r\n    }\r\n  }\r\n\r\n  storeOriginalPanAreaSize(slide) {\r\n    if (slide.dynamicCaption) {\r\n      if (!slide.dynamicCaption.originalPanAreaSize) {\r\n        slide.dynamicCaption.originalPanAreaSize = {};\r\n      }\r\n      slide.dynamicCaption.originalPanAreaSize.x = slide.panAreaSize.x;\r\n      slide.dynamicCaption.originalPanAreaSize.y = slide.panAreaSize.y;\r\n    }\r\n  }\r\n\r\n  getCaptionHTML(slide) {\r\n    if (typeof this.options.captionContent === 'function') {\r\n      return this.options.captionContent.call(this, slide);\r\n    }\r\n\r\n    const currSlideElement = slide.data.element;\r\n    let captionHTML = '';\r\n    if (currSlideElement) {\r\n      const hiddenCaption = currSlideElement.querySelector(this.options.captionContent);\r\n      if (hiddenCaption) {\r\n        // get caption from element with class pswp-caption-content\r\n        captionHTML = hiddenCaption.innerHTML;\r\n      } else {\r\n        const img = currSlideElement.querySelector('img');\r\n        if (img) {\r\n          // get caption from alt attribute\r\n          captionHTML = img.getAttribute('alt');\r\n        }\r\n      }\r\n    }\r\n    return captionHTML;\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeDynamicCaption;\r\n"],
  "mappings": "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",
  "names": []
}
